#!/usr/bin/env python
'''
Usage: 
    pipelines (--version|--help)
    pipelines api [--config=<config>] [--host=<host>] [--port=<port>] [--workspace=<workspace>]
    pipelines webhook [--config=<config>] [--host=<host>] [--port=<port>] [--workspace=<workspace>]

Options:
    --config=<config>           Path to config file [default: /etc/pipelines/pipelines.conf]
    --host=<host>               Bind address [default: 127.0.0.1]
    --port=<port>               Bind port [default: 8888]
    --workspace=<workspace>     Location of the pipelines and runs [default: /var/lib/pipelines/workspace] 

Help:
    pipelines api       Starts pipelines' API
    pipelines webhook   Starts pipelines' WebHook API
'''
import docopt

import sys
import os

from pipelines import __version__
from pipelines.api import server as admin_api
from pipelines.webhook import server as webhook_api


def parse_config(config_file):
    if not os.path.exists(config_file):
        return

if __name__ == '__main__':
    args = docopt.docopt(
        __doc__,
        version="version "+ __version__,
        help=True
    )

    # Starts the Admin API
    if args.get('api'):
        options = {
            'workspace': args.get('--workspace'),
            'host': args.get('--host'),
            'port': args.get('--port')
        }
        try:
            admin_api.main(options)
        except KeyboardInterrupt:
            print 'Exiting'

    # Starts the WebHook API
    if args.get('webhook'):
        options = {
            'workspace': args.get('--workspace'),
            'host': args.get('--host'),
            'port': args.get('--port')
        }
        try:
            webhook_api.main(options)
        except KeyboardInterrupt:
            print 'Exiting'

    else:
        print __doc__.strip('\n')
        sys.exit(0)

